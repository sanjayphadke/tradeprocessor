name: Build and Push Trade Producer Docker Image

on:
  push:
    branches: [ master ]
    paths:
      - 'tradeproducer/**'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    # Snyk scan for code dependencies
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/maven@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        command: monitor

    # Build the application
    - name: Build with Maven
      run: mvn -B package --file tradeproducer/pom.xml

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Build Docker image but don't push yet
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./tradeproducer
        file: ./tradeproducer/Dockerfile
        push: false
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/tradeproducer:latest
        load: true

    # Trivy scan for container vulnerabilities
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/tradeproducer:latest
        format: 'table'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'
        ignore-unfixed: true

    # Push image if all scans pass
    - name: Push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./tradeproducer
        file: ./tradeproducer/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/tradeproducer:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/tradeproducer:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/tradeproducer:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/tradeproducer:buildcache,mode=max
